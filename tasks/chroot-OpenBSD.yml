---

- set_fact:
    unbound_chroot_dev_dir: "{{ unbound_config_chroot }}/dev"

- assert:
    that:
      - unbound_config_chroot | length > 0
      - unbound_chroot_dev_dir != '/dev'

- name: Create dev mount point in chroot directory
  file:
    path: "{{ unbound_chroot_dev_dir }}"
    state: directory

- name: Test if mfs is mounted
  command: mount -t mfs
  register: register_mount
  changed_when: false
    
- name: Mount mfs unbound_chroot_dev_dir

  # By default, most of disk devices are mounted with 'nodev' in OpenBSD. To
  # create device files in chroot directory, create a small mfs disk.
  command: "mount_mfs -s 256k -o nosuid swap {{ unbound_chroot_dev_dir }}"
  when: "unbound_chroot_dev_dir not in register_mount.stdout"

- name: Create /dev/random

  # major and minor number can be found by:
  #
  # ls -al /dev/random                                                                                                   
  # crw-r--r--  1 root  wheel   45,   0 Nov  2 23:57 /dev/random
  command: mknod -m 644 random c 45 0
  args:
    chdir: "{{ unbound_chroot_dev_dir }}"
    creates: "{{ unbound_chroot_dev_dir }}/random"

- name: Create /dev/null

  # Probably not all device files are required by unbound. However, in the
  # future, these tasks should be rolled up in a role so that other role can
  # create chroot. Others might need these.
  #
  # XXX better to run MAKEDEV?
  command: mknod -m 666 null c 2 2
  args:
    chdir: "{{ unbound_chroot_dev_dir }}"
    creates: "{{ unbound_chroot_dev_dir }}/null"

- name: Create /dev/zero
  command: mknod -m 666 zero c 2 12
  args:
    chdir: "{{ unbound_chroot_dev_dir }}"
    creates: "{{ unbound_chroot_dev_dir }}/zero"

- name: Create /dev/stdin
  command: mknod -m 666 stdin c 22 0
  args:
    chdir: "{{ unbound_chroot_dev_dir }}"
    creates: "{{ unbound_chroot_dev_dir }}/stdin"

- name: Create /dev/stdout
  command: mknod -m 666 stdout c 22 1
  args:
    chdir: "{{ unbound_chroot_dev_dir }}"
    creates: "{{ unbound_chroot_dev_dir }}/stdout"

- name: Create /dev/stderr
  command: mknod -m 666 stderr c 22 2
  args:
    chdir: "{{ unbound_chroot_dev_dir }}"
    creates: "{{ unbound_chroot_dev_dir }}/stderr"

- name: Copy mk_chroot.sh

  # mfs cannot survive reboots. Add a script to re-create chroot environment
  copy:
    src: files/chroot/OpenBSD/mk_chroot.sh
    dest: "{{ unbound_script_dir }}/mk_chroot"
    mode: 755

- name: Test if /etc/rc.local exists
  stat:
    path: /etc/rc.local
  register: register_rc_local
  changed_when: false

- name: Create /etc/rc.local if it does not exist
  file:
    path: /etc/rc.local
    state: touch
  when:
    - not register_rc_local.stat.exists

- name: Register mk_chroot to rc.local

  # Run the script upon boot
  lineinfile:
    dest: /etc/rc.local
    line: "[ -x /usr/local/bin/mk_chroot ] && /usr/local/bin/mk_chroot {{ unbound_config_chroot }}"
